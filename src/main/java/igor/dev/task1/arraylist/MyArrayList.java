package igor.dev.task1.arraylist;

import java.util.Comparator;

/**
 * Интерфейс, определяющий методы для работы с динамическим массивом элементов.
 *
 * @param <T> Тип объекта, хранящегося в списке.
 */
public interface MyArrayList<T> {
    /**
     * Добавляет элемент в список
     *
     * @param item Элемент для добавления
     * @return true сигнализирует, что переданный элемент был успешно добавлен в список.
     */
    boolean add(T item);

    /**
     * Добавляет элемент по заданному индексу.
     *
     * @param index - индекс позиции, в которую нужно добавить элемент.
     * @param item - элемент, который нужно добавить.
     */
    void add(int index, T item);

    /**
     * Возвращает элемент по индексу.
     *
     * @param index - индекс элемента.
     * @return элемент списка по указанному индексу.
     */
    T get(int index);

    /**
     * Возвращает размер списка.
     *
     * @return размер списка.
     */
    int size();

    /**
     * Удаляет элемент из списка по индексу.
     *
     * @param index - индекс элемента, который нужно удалить.
     */
    void remove(int index);

    /**
     * Удаляет все элементы из списка.
     */
    void removeAll();

    /**
     * Возвращает индекс заданного элемента в списке.
     *
     * @param item - элемент, индекс которого нужно найти.
     * @return индекс элемента в списке или -1, если элемент не найден.
     */
    int indexOf(T item);

    /**
     * Переворачивает порядок элементов в списке.
     */
    void reverse();

    /**
     * Сортирует элементы списка с использованием заданного компаратора в заданном порядке.
     *
     * @param comparator - компаратор, который будет использоваться для сравнения элементов при сортировке.
     */
    void sort(Comparator<? super T> comparator);
}
